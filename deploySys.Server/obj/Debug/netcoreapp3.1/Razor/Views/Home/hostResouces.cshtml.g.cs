#pragma checksum "D:\document\workSpace\projects\dotnetCore\open_microService\deploySys\deploySys.Server\Views\Home\hostResouces.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "29d96c8cc5fb28eb4537eac263e4904ebaed0794"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_hostResouces), @"mvc.1.0.view", @"/Views/Home/hostResouces.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"29d96c8cc5fb28eb4537eac263e4904ebaed0794", @"/Views/Home/hostResouces.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"495fbe8d9d5ee75fa928b45d133cd21238862f9c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_hostResouces : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\document\workSpace\projects\dotnetCore\open_microService\deploySys\deploySys.Server\Views\Home\hostResouces.cshtml"
  
    Layout = "_dataLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("_search", async() => {
                WriteLiteral(@"
    <el-row :gutter=""10"">
         <el-col :span=""8"">
            <div class=""grid-content"">
                <el-select v-model=""mainSearchModel.regionId"" placeholder=""请选择"" v-on:change=""regionOnchange()"">
                    <el-option v-for=""item in regions""
                               :key=""item.Id""
                               :label=""item.Name""
                               :value=""item.Id"">
                    </el-option>
                </el-select>
            </div>
        </el-col>
        <el-col :span=""8"">
            <div class=""grid-content"">
                <el-select v-model=""mainSearchModel.Id"" placeholder=""请选择"">
                    <el-option v-for=""item in categorys""
                               :key=""item.Id""
                               :label=""item.Name""
                               :value=""item.Id"">
                    </el-option>
                </el-select>
            </div>
        </el-col>
            <el-col :span=""8"">
            <div clas");
                WriteLiteral("s=\"grid-content\">\r\n                <searchEditor v-bind:SearchModel=\"mainSearchModel\" v-on:dosearch=\"getMainTableData\"></searchEditor>\r\n            </div>\r\n        </el-col>\r\n        \r\n    </el-row>\r\n\r\n\r\n       \r\n");
            }
            );
            DefineSection("_command", async() => {
                WriteLiteral(@"
    <el-button-group>
        <el-button type=""primary"" icon=""el-icon-edit"" v-on:click=""mainEdit"" :disabled=""mainCommandDisnable""></el-button>
        <el-button type=""primary"" icon=""el-icon-circle-plus"" v-on:click=""mainAdd""></el-button>
         <el-button type=""primary"" icon=""el-icon-delete"" v-on:click=""mainDelete"" :disabled=""mainCommandDisnable""></el-button>
        <el-button type=""primary"" icon=""el-icon-s-data"" v-on:click=""openViewPerf"" :disabled=""mainCommandDisnable""></el-button>
        <el-button type=""primary"" icon=""el-icon-s-tools"" v-on:click=""openAppInstances"" :disabled=""mainCommandDisnable"">查看实例</el-button>
         <el-button type=""primary"" icon=""el-icon-s-tools"" v-on:click=""openAppWebSites"" :disabled=""mainCommandDisnable"">查看站点</el-button>
         <el-button type=""primary"" icon=""el-icon-s-tools"" v-on:click=""openHostTask"" :disabled=""mainCommandDisnable"">查看主机任务</el-button>
        <el-button type=""primary""  v-on:click=""refreshClient"">更新客户端</el-button>
        
        
    </el-button");
                WriteLiteral("-group>\r\n");
            }
            );
            WriteLiteral(@"
<template>
    <div>
        <v-table is-vertical-resize
                 :vertical-resize-offset='60'
                 is-horizontal-resize
                  column-width-drag
                 style=""width:100%""
                 :multiple-sort=""false""
                 :min-height=""550""
                 even-bg-color=""#f2f2f2""
                 :columns=""mainTableConfig.columns""
                 :table-data=""mainTableConfig.tableData""
                 row-hover-color=""#eee""
                 row-click-color=""#edf7ff""
                 :row-click=""mainRowClick""
                 v-on:sort-change=""sortChange""
                  v-on:on-custom-comp=""customCompFunc""
                 :paging-index=""(mainPageIndex-1)*pageSize"">
                
        </v-table>

        <div class=""mt20 mb20 bold""></div>

        <div class=""pages"">
            <v-pagination v-on:page-change=""mainPageChange"" v-on:page-size-change=""mainPageSizeChange"" :total=""mainTotalCount"" :page-size=""pageSize"" :layout=""['to");
            WriteLiteral("tal\', \'prev\', \'pager\', \'next\', \'sizer\', \'jumper\']\">\r\n\r\n            </v-pagination>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        ");
#nullable restore
#line 85 "D:\document\workSpace\projects\dotnetCore\open_microService\deploySys\deploySys.Server\Views\Home\hostResouces.cshtml"
   Write(Html.Partial("hostResouces_js"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n</template>\r\n\r\n\r\n");
            DefineSection("vueScript", async() => {
                WriteLiteral(@"

    <script>
        var vmd = new ViewModel();
        vmd.init(""#app"");
        Vue.component('table-Image',{
        template:`<span>
        <a href="""" v-on:click.stop.prevent=""ViewBar(rowData,index)"">查看二维码</a>&nbsp;
      
     <!--   <img :src='rowData[""barCodeUrl""]'  alt=""""  style=""width: 200px; height: 100px"" /> -->
    
        </span>`,
            props: {
               
            rowData:{
                type:Object
            },
            field:{
                type:String
            },
            index:{
                type:Number
            }
        },
        methods:{
            ViewBar(){

               // 参数根据业务场景随意构造
               let params = {type:'ViewBar',index:this.index,rowData:this.rowData};
               this.$emit('on-custom-comp',params);
            },

            deleteRow(){

                // 参数根据业务场景随意构造
                let params = {type:'delete',index:this.index};
                this.$emit('on-custom-comp',params);");
                WriteLiteral(@"

            }
        }
    })
        function ViewModel() {
            var me = this;
            ViewModelBase.call(me);
            vmExtend.call(me);
            me.data.categorys = [];
            me.data.regions = [];

            me.data.mainSearchModel = { ""keyword"": null, ""Id"": null ,""regionId"":1};


            me.data.mainTableConfig.columns = [
                 {
                    field: 'Id', width: 30, titleAlign: 'center', columnAlign: 'center', title: 'ID', titleCellClassName: 'title-cell-class-name-title', isFrozen:true
                },
                { field: 'hostName', width: 100, titleAlign: 'center', title: '主机名', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },
                { field: 'IP', width: 150, titleAlign: 'center', title: 'Ip地址', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },
                { field: 'macId', width: 150, titleAlign: 'center', title: 'mac地址', col");
                WriteLiteral(@"umnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },

                 { field: 'nodePort', width: 50, titleAlign: 'center', title: '端口', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },
                { field: 'inLine', width: 50, titleAlign: 'center', title: '在线', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },
                { field: 'OsName', width: 200, titleAlign: 'center', title: '操作系统', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },
                { field: 'lastRegisteDt', width: 200, titleAlign: 'center', title: '注册时间', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },
                { field: 'aliveDt', width: 200, titleAlign: 'center', title: '心跳', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },

                { field: 'cpuName', width:");
                WriteLiteral(@" 200, titleAlign: 'center', title: 'cpu', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },
                { field: 'cpuCoreNumber', width: 50, titleAlign: 'center', title: 'cpu核', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isResize: true },


            ];

        }
        function vmExtend() {
            var me = this;
            me.methods.regionOnchange = function () {
                if (me.data.mainSearchModel.regionId == null || me.data.mainSearchModel.regionId <= 0)
                    return;
                me.data.categorys = [];
                me.data.mainTableConfig.tableData = [];
                me.data.mainSearchModel.Id = null;

                $vmpa.get(""/Api/sysconf/Zones?PageSize=100&Id="" + me.data.mainSearchModel.regionId, null, function (result) {
                    if (result.Status == ResultStatus.OK) {
                        me.data.categorys = result.Data.DataList;
                   ");
                WriteLiteral(@" }
                });
            }
            me.methods.openHostTask = function () {
                   var tabUrl = ""/rtask/taskHosts/-1?HostId="" + me.data.mainSelectedModel.Id;
                var tabDDid = ""hostTaskHosts-"" + me.data.mainSelectedModel.Id;
                var tabTitle = ""主机任务["" + me.data.mainSelectedModel.Id + ""]"";
                $vmpa.addOrChangeToTab(tabUrl, tabDDid, tabTitle);
            }
             me.methods.openAppInstances = function () {
                var xx = top.layui.element;
                var tabUrl = ""/home/appInstances/-1?hostId="" + me.data.mainSelectedModel.Id;
                var tabDDid = ""hostInstances-"" + me.data.mainSelectedModel.Id;
                var tabTitle = ""主机运行实例["" + me.data.mainSelectedModel.hostName + ""]"";
                $vmpa.addOrChangeToTab(tabUrl, tabDDid, tabTitle);
            }
              me.methods.openAppWebSites = function () {
                var xx = top.layui.element;
                var tabUrl = ""/home/webSites/-");
                WriteLiteral(@"1&hostId="" + me.data.mainSelectedModel.Id;
                var tabDDid = ""website-"" + me.data.mainSelectedModel.Id;
                var tabTitle = ""主机运行站点["" + me.data.mainSelectedModel.hostName + ""]"";
                $vmpa.addOrChangeToTab(tabUrl, tabDDid, tabTitle);
            }
             me.methods.openViewPerf = function () {
                var xx = top.layui.element;
                var tabUrl = ""/home/hostPerf/"" + me.data.mainSelectedModel.Id;
                var tabDDid = ""hostPerf-"" + me.data.mainSelectedModel.Id;
                var tabTitle = ""主机性能["" + me.data.mainSelectedModel.Id + ""]"";
                $vmpa.addOrChangeToTab(tabUrl, tabDDid, tabTitle);
            }
            me.methods.refreshClient = function () {
                                $vmpa.get(""/Api/sysconf/refreshClientSoftware"" , null, function (result) {
                    if (result.Status != ResultStatus.OK) {
                        $vmpa.alert(""更新失败"");
                    }
                });
         ");
                WriteLiteral(@"   }
            me.methods.customCompFunc = function (params) {
                console.log(params);

                if (params.type === 'delete') { // do delete operation

                    //this.$delete(this.tableData, params.index);

                } else if (params.type === 'ViewBar') { // do edit operation
                    me.data.barImageUrl = params.rowData['barCodeUrl'];
                    me.data.barCode = params.rowData['BarCode'];
                    me.data.barImageDialog.Open(null);
                }
            }

            me.methods.sortChange = function (params) {
                if (params.height.length > 0) {

                    this.mainTableConfig.tableData.sort(function (a, b) {

                        if (params.height === 'asc') {

                            return a.height - b.height;
                        } else if (params.height === 'desc') {

                            return b.height - a.height;
                        } else {

      ");
                WriteLiteral(@"                      return 0;
                        }
                    });
                }

            };
            me.mainLoadTablePagedDataUrl = ""/Api/sysconf/HostResources"";
            me.mainAddUrl = ""/Api/sysconf/auHostResource"";
            me.mainDeleteUrl = ""/Api/sysconf/deleteHostResource"";
            me.mainUpdateUrl = ""/Api/sysconf/auHostResource"";
            me.data.mainDialog = new goodsDialog(this, true);
            me.mainDetailUrl = """";
            me.methods.OnCreate = function () {

                $vmpa.get(""/Api/sysconf/Regions?PageSize=100"", null, function (result) {
                    if (result.Status == ResultStatus.OK) {
                        me.data.regions = result.Data.DataList;
                        if (me.data.regions.length > 0) {
                            me.data.mainSearchModel.regionId = me.data.regions[0].Id;
                            me.methods.regionOnchange();
                        }
                    }
                })");
                WriteLiteral(@";
               
            }
            me.methods.mainAdd = function () {
                var newmodel = { Id: -1,nginxConfPath:""/opt/nginx"",haveNginx:false };
                me.OnMainEdit(newmodel, ""新增"");
            }
        }
        function goodsDialog(vm, _ismain) {
            var me = this;
            DialogBase.call(me, vm, _ismain);

            me.OnSave = function (model) {
                var updateurl = """";


                if (me.EditModel[me._vm.ModelKeyName] > 0) {


                    if (me.isMain)
                        updateurl = me._vm.mainUpdateUrl + ""/"" + me.EditModel[""Ass_Zone_Id""];
                    else
                        updateurl = me._vm.slaveUpdateUrl;
                    $vmpa.post(updateurl, me.EditModel, function (result) {
                        me.refreshTable();
                    })
                } else {
                    if (me.isMain)
                        updateurl = me._vm.mainAddUrl + ""/"" + me.EditModel[""Ass_Zon");
                WriteLiteral(@"e_Id""];
                    else
                        updateurl = me._vm.slaveAddUrl;
                    $vmpa.post(updateurl, me.EditModel, function (result) {
                        me.refreshTable();
                    })
                }
            }


        }

       
       
    </script>

");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
