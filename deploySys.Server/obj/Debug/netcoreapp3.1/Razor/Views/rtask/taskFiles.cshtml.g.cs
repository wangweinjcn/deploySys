#pragma checksum "D:\document\workSpace\projects\dotnetCore\open_microService\deploySys\deploySys.Server\Views\rtask\taskFiles.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4dccde6c6d8f593364b8a92c3f1f5a503298ba11"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_rtask_taskFiles), @"mvc.1.0.view", @"/Views/rtask/taskFiles.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4dccde6c6d8f593364b8a92c3f1f5a503298ba11", @"/Views/rtask/taskFiles.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"495fbe8d9d5ee75fa928b45d133cd21238862f9c", @"/Views/_ViewImports.cshtml")]
    public class Views_rtask_taskFiles : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\document\workSpace\projects\dotnetCore\open_microService\deploySys\deploySys.Server\Views\rtask\taskFiles.cshtml"
  
    Layout = "_dataLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("_search", async() => {
                WriteLiteral("\r\n    <searchEditor v-bind:SearchModel=\"mainSearchModel\" v-on:dosearch=\"getMainTableData\"></searchEditor>\r\n");
            }
            );
            DefineSection("_command", async() => {
                WriteLiteral("\r\n    <el-button-group>\r\n        <el-button type=\"primary\" icon=\"el-icon-delete\" v-on:click=\"mainDelete\" :disabled=\"mainCommandDisnable\"></el-button>\r\n    </el-button-group>\r\n");
            }
            );
            WriteLiteral(@"
<template>
    <div>
        <v-table is-vertical-resize
                 :vertical-resize-offset='60'
                 is-horizontal-resize
                 style=""width:100%""
                 :multiple-sort=""false""
                 :min-height=""550""
                 even-bg-color=""#f2f2f2""
                 :columns=""mainTableConfig.columns""
                 :table-data=""mainTableConfig.tableData""
                 row-hover-color=""#eee""
                 row-click-color=""#edf7ff""
                 :row-click=""mainRowClick""
                 v-on:sort-change=""sortChange""
                 :paging-index=""(mainPageIndex-1)*pageSize""></v-table>


        
       <div class=""mt20 mb20 bold""></div>

        <div class=""pages"">
            <v-pagination v-on:page-change=""mainPageChange"" v-on:page-size-change=""mainPageSizeChange"" :total=""mainTotalCount"" :page-size=""pageSize"" :layout=""['total', 'prev', 'pager', 'next', 'sizer', 'jumper']"">

            </v-pagination>
        </div>
    </div>");
            WriteLiteral("\r\n    <div>\r\n        ");
#nullable restore
#line 42 "D:\document\workSpace\projects\dotnetCore\open_microService\deploySys\deploySys.Server\Views\rtask\taskFiles.cshtml"
   Write(Html.Partial("taskFiles_js"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n</template>\r\n\r\n\r\n");
            DefineSection("vueScript", async() => {
                WriteLiteral(@"
    <script>
        var vmd = new ViewModel();
        vmd.init(""#app"");
        function ViewModel() {
            var me = this;
            ViewModelBase.call(me);
            vmExtend.call(me);
            me.data.deptOptions = [];
            me.data.rolesOptions = [];
            me.data.mainTableConfig.columns = [
                {
                    field: 'Id', width: 50, titleAlign: 'center', columnAlign: 'center', title: 'ID', titleCellClassName: 'title-cell-class-name-title', isFrozen:false
                },
                { field: 'retationPath', width: 330, titleAlign: 'center', title: '相对路径', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isFrozen: false },
                { field: 'fileName', width: 330, titleAlign: 'center', title: '文件名', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isFrozen: false },
                { field: 'dllVersion', width: 100, titleAlign: 'center', title: 'dll版本', columnAlign: 'center', title");
                WriteLiteral(@"CellClassName: 'title-cell-class-name-title', isFrozen: false },
                { field: 'fileSize', width: 150, titleAlign: 'center', title: '文件大小', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isFrozen: false },



            ];

        }
        function vmExtend() {
            var me = this;

            me.methods.sortChange = function (params) {
                if (params.height.length > 0) {

                    this.mainTableConfig.tableData.sort(function (a, b) {

                        if (params.height === 'asc') {

                            return a.height - b.height;
                        } else if (params.height === 'desc') {

                            return b.height - a.height;
                        } else {

                            return 0;
                        }
                    });
                }

            };
            
            me.mainLoadTablePagedDataUrl = ""/Api/SysManage/taskFileItems/");
#nullable restore
#line 94 "D:\document\workSpace\projects\dotnetCore\open_microService\deploySys\deploySys.Server\Views\rtask\taskFiles.cshtml"
                                                                    Write(ViewBag.taskId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""";
            me.mainAddUrl = "" "";
            me.mainDeleteUrl = ""/Api/SysManage/deleteFileItems"";
            me.mainUpdateUrl = """";
            me.data.mainDialog = new appTypeDialog(this, true);
            me.mainDetailUrl = """";
            me.methods.OnCreate = function () {
              
            }
        }
        function appTypeDialog(vm, _ismain) {
            var me = this;
            DialogBase.call(me, vm, _ismain);
           
        
           
        }
    </script>

");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
