@{
    Layout = "_dataLayout";
}

@section _search {
    <searchEditor v-bind:SearchModel="mainSearchModel" v-on:dosearch="getMainTableData"></searchEditor>
}
@section _command{
    <el-button-group>
        <el-button type="primary" icon="" v-on:click="getlogContent" :disabled="mainCommandDisnable">查看日志</el-button>
         <el-button type="primary" icon="" v-on:click="deleteLogFile" :disabled="mainCommandDisnable">删除日志</el-button>
    </el-button-group>
}

<template>
    <div>
        <v-table is-vertical-resize
                 :vertical-resize-offset='60'
                 is-horizontal-resize
                 style="width:100%"
                 :multiple-sort="false"
                 :min-height="550"
                 even-bg-color="#f2f2f2"
                 :columns="mainTableConfig.columns"
                 :table-data="mainTableConfig.tableData"
                 row-hover-color="#eee"
                 row-click-color="#edf7ff"
                 :row-click="mainRowClick"
                 v-on:sort-change="sortChange"
                 :paging-index="(mainPageIndex-1)*pageSize"></v-table>

       <div class="mt20 mb20 bold"></div>

        <div class="pages">
            <v-pagination v-on:page-change="mainPageChange" v-on:page-size-change="mainPageSizeChange" :total="mainTotalCount" :page-size="pageSize" :layout="['total', 'prev', 'pager', 'next', 'sizer', 'jumper']">

            </v-pagination>
        </div>
    <div>
        @Html.Partial("instanceLogs_js")
    </div>
</template>


@section vueScript{
    <script>
        var vmd = new ViewModel();
        vmd.init("#app");
        function ViewModel() {
            var me = this;
            ViewModelBase.call(me);
            vmExtend.call(me);
            me.data.deptOptions = [];
            me.data.rolesOptions = [];
            me.data.mainTableConfig.columns = [
                {
                    field: 'Id', width: 50, titleAlign: 'center', columnAlign: 'center', title: 'ID', titleCellClassName: 'title-cell-class-name-title', isFrozen:true
                },
                { field: 'Name', width: 330, titleAlign: 'center', title: '文件名', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isFrozen:false },
                { field: 'Length', width: 330, titleAlign: 'center', title: '大小', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isFrozen: false },
                { field: 'CreationTime', width: 330, titleAlign: 'center', title: '创建时间', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isFrozen: false },
                { field: 'LastWriteTime', width: 330, titleAlign: 'center', title: '最后更新时间', columnAlign: 'center', titleCellClassName: 'title-cell-class-name-title', isFrozen:false },



            ];

        }
        function vmExtend() {
            var me = this;

            me.methods.sortChange = function (params) {
                if (params.height.length > 0) {

                    this.mainTableConfig.tableData.sort(function (a, b) {

                        if (params.height === 'asc') {

                            return a.height - b.height;
                        } else if (params.height === 'desc') {

                            return b.height - a.height;
                        } else {

                            return 0;
                        }
                    });
                }

            };
             me.methods.deleteLogFile = function () {
                 var url ="/Api/SysManage/deleteLogFile/@ViewBag.instanceId" ;
                var params = {"fn":me.data.mainSelectedModel.FullName};
                var _this = this;
                $vmpa.post(url, params, function (result) {
                    var msg = result.Msg || "处理成功";
                    $vmpa.msg(msg);
                    if (result.Status == ResultStatus.OK) {
                        me.methods.getMainTableData();
                        me.methods.mainSelectedModel = null;
                    }
                });
            };
            me.methods.getlogContent = function () {
                  var $eleForm = $("<form method='get'> <input type='hidden' name='fn' value='" + me.data.mainSelectedModel.FullName + "'>"

                    + "</form>");
                $eleForm.attr("action", '/Api/sysmanage/getLogContent/@ViewBag.instanceId' );
                $(document.body).append($eleForm);
                $eleForm.submit();
            }
            me.mainLoadTablePagedDataUrl = "/Api/sysmanage/getLogs/@ViewBag.instanceId";

            me.mainDetailUrl = "";
            me.methods.OnCreate = function () {

            }
        }
        function appTypeDialog(vm, _ismain) {
            var me = this;
            DialogBase.call(me, vm, _ismain);



        }
    </script>

}

